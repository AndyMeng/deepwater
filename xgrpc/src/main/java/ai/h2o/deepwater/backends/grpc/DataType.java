// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_service.proto

package ai.h2o.deepwater.backends.grpc;

/**
 * Protobuf enum {@code deepwater.DataType}
 */
public enum DataType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>DT_INVALID = 0;</code>
   */
  DT_INVALID(0),
  /**
   * <code>DT_FLOAT32 = 1;</code>
   */
  DT_FLOAT32(1),
  /**
   * <code>DT_FLOAT64 = 2;</code>
   */
  DT_FLOAT64(2),
  /**
   * <code>DT_INT32 = 3;</code>
   */
  DT_INT32(3),
  /**
   * <code>DT_INT64 = 4;</code>
   */
  DT_INT64(4),
  /**
   * <code>DT_BOOL = 5;</code>
   */
  DT_BOOL(5),
  /**
   * <code>DT_STRING = 6;</code>
   */
  DT_STRING(6),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>DT_INVALID = 0;</code>
   */
  public static final int DT_INVALID_VALUE = 0;
  /**
   * <code>DT_FLOAT32 = 1;</code>
   */
  public static final int DT_FLOAT32_VALUE = 1;
  /**
   * <code>DT_FLOAT64 = 2;</code>
   */
  public static final int DT_FLOAT64_VALUE = 2;
  /**
   * <code>DT_INT32 = 3;</code>
   */
  public static final int DT_INT32_VALUE = 3;
  /**
   * <code>DT_INT64 = 4;</code>
   */
  public static final int DT_INT64_VALUE = 4;
  /**
   * <code>DT_BOOL = 5;</code>
   */
  public static final int DT_BOOL_VALUE = 5;
  /**
   * <code>DT_STRING = 6;</code>
   */
  public static final int DT_STRING_VALUE = 6;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DataType valueOf(int value) {
    return forNumber(value);
  }

  public static DataType forNumber(int value) {
    switch (value) {
      case 0: return DT_INVALID;
      case 1: return DT_FLOAT32;
      case 2: return DT_FLOAT64;
      case 3: return DT_INT32;
      case 4: return DT_INT64;
      case 5: return DT_BOOL;
      case 6: return DT_STRING;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DataType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DataType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
          public DataType findValueByNumber(int number) {
            return DataType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return ai.h2o.deepwater.backends.grpc.DeepWaterGRPCService.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final DataType[] VALUES = values();

  public static DataType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DataType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:deepwater.DataType)
}

