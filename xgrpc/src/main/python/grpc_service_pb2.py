# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='grpc_service.proto',
  package='deepwater',
  syntax='proto3',
  serialized_pb=_b('\n\x12grpc_service.proto\x12\tdeepwater\"\x19\n\x07Session\x12\x0e\n\x06handle\x18\x01 \x01(\t\")\n\x0c\x42\x61\x63kendModel\x12\n\n\x02id\x18\x01 \x01(\x0c\x12\r\n\x05state\x18\x02 \x01(\x0c\"<\n\x12\x44\x65leteModelRequest\x12&\n\x05model\x18\x01 \x01(\x0b\x32\x17.deepwater.BackendModel\"\xcd\x01\n\x12\x43reateModelRequest\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\x12\x11\n\tmodelName\x18\x02 \x01(\t\x12\x39\n\x06params\x18\x03 \x03(\x0b\x32).deepwater.CreateModelRequest.ParamsEntry\x1a\x44\n\x0bParamsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.deepwater.ParamValue:\x02\x38\x01\"`\n\x13\x43reateModelResponse\x12&\n\x05model\x18\x01 \x01(\x0b\x32\x17.deepwater.BackendModel\x12!\n\x06status\x18\x02 \x01(\x0b\x32\x11.deepwater.Status\"\x9c\x01\n\x14\x43reateSessionRequest\x12=\n\x07options\x18\x01 \x03(\x0b\x32,.deepwater.CreateSessionRequest.OptionsEntry\x1a\x45\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.deepwater.ParamValue:\x02\x38\x01\"_\n\x15\x43reateSessionResponse\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\x12!\n\x06status\x18\x02 \x01(\x0b\x32\x11.deepwater.Status\";\n\x14\x44\x65leteSessionRequest\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\"%\n\x06Status\x12\n\n\x02ok\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"m\n\x10LoadModelRequest\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\x12&\n\x05model\x18\x02 \x01(\x0b\x32\x17.deepwater.BackendModel\x12\x0c\n\x04path\x18\x03 \x01(\x0c\"m\n\x10SaveModelRequest\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\x12&\n\x05model\x18\x02 \x01(\x0b\x32\x17.deepwater.BackendModel\x12\x0c\n\x04path\x18\x03 \x01(\x0c\"o\n\x12LoadWeightsRequest\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\x12&\n\x05model\x18\x02 \x01(\x0b\x32\x17.deepwater.BackendModel\x12\x0c\n\x04path\x18\x03 \x01(\x0c\"o\n\x12SaveWeightsRequest\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\x12&\n\x05model\x18\x02 \x01(\x0b\x32\x17.deepwater.BackendModel\x12\x0c\n\x04path\x18\x03 \x01(\x0c\"\xe6\x01\n\x14SetParametersRequest\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\x12&\n\x05model\x18\x02 \x01(\x0b\x32\x17.deepwater.BackendModel\x12;\n\x06params\x18\x03 \x03(\x0b\x32+.deepwater.SetParametersRequest.ParamsEntry\x1a\x44\n\x0bParamsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.deepwater.ParamValue:\x02\x38\x01\"\xbe\x01\n\x15SetParametersResponse\x12!\n\x06status\x18\x01 \x01(\x0b\x32\x11.deepwater.Status\x12<\n\x06params\x18\x02 \x03(\x0b\x32,.deepwater.SetParametersResponse.ParamsEntry\x1a\x44\n\x0bParamsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.deepwater.ParamValue:\x02\x38\x01\"\xa3\x01\n\x0e\x45xecuteRequest\x12#\n\x07session\x18\x01 \x01(\x0b\x32\x12.deepwater.Session\x12&\n\x05model\x18\x02 \x01(\x0b\x32\x17.deepwater.BackendModel\x12 \n\x05\x66\x65\x65\x64s\x18\x03 \x03(\x0b\x32\x11.deepwater.Tensor\x12\"\n\x07\x66\x65tches\x18\x04 \x03(\x0b\x32\x11.deepwater.Tensor\"X\n\x0f\x45xecuteResponse\x12!\n\x06status\x18\x01 \x01(\x0b\x32\x11.deepwater.Status\x12\"\n\x07\x66\x65tches\x18\x02 \x03(\x0b\x32\x11.deepwater.Tensor\"?\n\x05Shape\x12!\n\x03\x64im\x18\x02 \x03(\x0b\x32\x14.deepwater.Shape.Dim\x1a\x13\n\x03\x44im\x12\x0c\n\x04size\x18\x01 \x01(\x03\"\xed\x01\n\x06Tensor\x12\x1f\n\x05shape\x18\x01 \x01(\x0b\x32\x10.deepwater.Shape\x12!\n\x04type\x18\x02 \x01(\x0e\x32\x13.deepwater.DataType\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x14\n\x0cstring_value\x18\x04 \x03(\x0c\x12\x17\n\x0bint32_value\x18\x05 \x03(\x05\x42\x02\x10\x01\x12\x17\n\x0bint64_value\x18\x06 \x03(\x03\x42\x02\x10\x01\x12\x17\n\x0b\x66loat_value\x18\x07 \x03(\x02\x42\x02\x10\x01\x12\x18\n\x0c\x64ouble_value\x18\x08 \x03(\x01\x42\x02\x10\x01\x12\x16\n\nbool_value\x18\t \x03(\x08\x42\x02\x10\x01\"\xdb\x01\n\nParamValue\x12\x0b\n\x01s\x18\x02 \x01(\x0cH\x00\x12\x0b\n\x01i\x18\x03 \x01(\x03H\x00\x12\x0b\n\x01\x66\x18\x04 \x01(\x02H\x00\x12\x0b\n\x01\x64\x18\x05 \x01(\x01H\x00\x12\x0b\n\x01\x62\x18\x06 \x01(\x08H\x00\x12/\n\x04list\x18\x01 \x01(\x0b\x32\x1f.deepwater.ParamValue.ListValueH\x00\x1aR\n\tListValue\x12\t\n\x01s\x18\x02 \x03(\x0c\x12\r\n\x01i\x18\x03 \x03(\x03\x42\x02\x10\x01\x12\r\n\x01\x63\x18\x04 \x03(\x02\x42\x02\x10\x01\x12\r\n\x01\x66\x18\x05 \x03(\x01\x42\x02\x10\x01\x12\r\n\x01\x62\x18\x06 \x03(\x08\x42\x02\x10\x01\x42\x07\n\x05value*r\n\x08\x44\x61taType\x12\x0e\n\nDT_INVALID\x10\x00\x12\x0e\n\nDT_FLOAT32\x10\x01\x12\x0e\n\nDT_FLOAT64\x10\x02\x12\x0c\n\x08\x44T_INT32\x10\x03\x12\x0c\n\x08\x44T_INT64\x10\x04\x12\x0b\n\x07\x44T_BOOL\x10\x05\x12\r\n\tDT_STRING\x10\x06\x32]\n\x17\x44\x65\x65pWaterPredictBackend\x12\x42\n\x07\x45xecute\x12\x19.deepwater.ExecuteRequest\x1a\x1a.deepwater.ExecuteResponse\"\x00\x32\xa2\x05\n\x15\x44\x65\x65pWaterTrainBackend\x12N\n\x0b\x43reateModel\x12\x1d.deepwater.CreateModelRequest\x1a\x1e.deepwater.CreateModelResponse\"\x00\x12T\n\rCreateSession\x12\x1f.deepwater.CreateSessionRequest\x1a .deepwater.CreateSessionResponse\"\x00\x12\x45\n\rDeleteSession\x12\x1f.deepwater.DeleteSessionRequest\x1a\x11.deepwater.Status\"\x00\x12=\n\tLoadModel\x12\x1b.deepwater.LoadModelRequest\x1a\x11.deepwater.Status\"\x00\x12=\n\tSaveModel\x12\x1b.deepwater.SaveModelRequest\x1a\x11.deepwater.Status\"\x00\x12\x41\n\x0bLoadWeights\x12\x1d.deepwater.LoadWeightsRequest\x1a\x11.deepwater.Status\"\x00\x12\x41\n\x0bSaveWeights\x12\x1d.deepwater.SaveWeightsRequest\x1a\x11.deepwater.Status\"\x00\x12T\n\rSetParameters\x12\x1f.deepwater.SetParametersRequest\x1a .deepwater.SetParametersResponse\"\x00\x12\x42\n\x07\x45xecute\x12\x19.deepwater.ExecuteRequest\x1a\x1a.deepwater.ExecuteResponse\"\x00\x42\x38\n\x1e\x61i.h2o.deepwater.backends.grpcB\x14\x44\x65\x65pWaterGRPCServiceP\x01\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_DATATYPE = _descriptor.EnumDescriptor(
  name='DataType',
  full_name='deepwater.DataType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DT_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DT_FLOAT32', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DT_FLOAT64', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DT_INT32', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DT_INT64', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DT_BOOL', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DT_STRING', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2484,
  serialized_end=2598,
)
_sym_db.RegisterEnumDescriptor(_DATATYPE)

DataType = enum_type_wrapper.EnumTypeWrapper(_DATATYPE)
DT_INVALID = 0
DT_FLOAT32 = 1
DT_FLOAT64 = 2
DT_INT32 = 3
DT_INT64 = 4
DT_BOOL = 5
DT_STRING = 6



_SESSION = _descriptor.Descriptor(
  name='Session',
  full_name='deepwater.Session',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='handle', full_name='deepwater.Session.handle', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=58,
)


_BACKENDMODEL = _descriptor.Descriptor(
  name='BackendModel',
  full_name='deepwater.BackendModel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='deepwater.BackendModel.id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='deepwater.BackendModel.state', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=60,
  serialized_end=101,
)


_DELETEMODELREQUEST = _descriptor.Descriptor(
  name='DeleteModelRequest',
  full_name='deepwater.DeleteModelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model', full_name='deepwater.DeleteModelRequest.model', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=103,
  serialized_end=163,
)


_CREATEMODELREQUEST_PARAMSENTRY = _descriptor.Descriptor(
  name='ParamsEntry',
  full_name='deepwater.CreateModelRequest.ParamsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='deepwater.CreateModelRequest.ParamsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='deepwater.CreateModelRequest.ParamsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=303,
  serialized_end=371,
)

_CREATEMODELREQUEST = _descriptor.Descriptor(
  name='CreateModelRequest',
  full_name='deepwater.CreateModelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.CreateModelRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='modelName', full_name='deepwater.CreateModelRequest.modelName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='params', full_name='deepwater.CreateModelRequest.params', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CREATEMODELREQUEST_PARAMSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=166,
  serialized_end=371,
)


_CREATEMODELRESPONSE = _descriptor.Descriptor(
  name='CreateModelResponse',
  full_name='deepwater.CreateModelResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model', full_name='deepwater.CreateModelResponse.model', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='deepwater.CreateModelResponse.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=373,
  serialized_end=469,
)


_CREATESESSIONREQUEST_OPTIONSENTRY = _descriptor.Descriptor(
  name='OptionsEntry',
  full_name='deepwater.CreateSessionRequest.OptionsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='deepwater.CreateSessionRequest.OptionsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='deepwater.CreateSessionRequest.OptionsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=559,
  serialized_end=628,
)

_CREATESESSIONREQUEST = _descriptor.Descriptor(
  name='CreateSessionRequest',
  full_name='deepwater.CreateSessionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='options', full_name='deepwater.CreateSessionRequest.options', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CREATESESSIONREQUEST_OPTIONSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=472,
  serialized_end=628,
)


_CREATESESSIONRESPONSE = _descriptor.Descriptor(
  name='CreateSessionResponse',
  full_name='deepwater.CreateSessionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.CreateSessionResponse.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='deepwater.CreateSessionResponse.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=630,
  serialized_end=725,
)


_DELETESESSIONREQUEST = _descriptor.Descriptor(
  name='DeleteSessionRequest',
  full_name='deepwater.DeleteSessionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.DeleteSessionRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=727,
  serialized_end=786,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='deepwater.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ok', full_name='deepwater.Status.ok', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='deepwater.Status.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=788,
  serialized_end=825,
)


_LOADMODELREQUEST = _descriptor.Descriptor(
  name='LoadModelRequest',
  full_name='deepwater.LoadModelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.LoadModelRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model', full_name='deepwater.LoadModelRequest.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='deepwater.LoadModelRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=827,
  serialized_end=936,
)


_SAVEMODELREQUEST = _descriptor.Descriptor(
  name='SaveModelRequest',
  full_name='deepwater.SaveModelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.SaveModelRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model', full_name='deepwater.SaveModelRequest.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='deepwater.SaveModelRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=938,
  serialized_end=1047,
)


_LOADWEIGHTSREQUEST = _descriptor.Descriptor(
  name='LoadWeightsRequest',
  full_name='deepwater.LoadWeightsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.LoadWeightsRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model', full_name='deepwater.LoadWeightsRequest.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='deepwater.LoadWeightsRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1049,
  serialized_end=1160,
)


_SAVEWEIGHTSREQUEST = _descriptor.Descriptor(
  name='SaveWeightsRequest',
  full_name='deepwater.SaveWeightsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.SaveWeightsRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model', full_name='deepwater.SaveWeightsRequest.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='deepwater.SaveWeightsRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1162,
  serialized_end=1273,
)


_SETPARAMETERSREQUEST_PARAMSENTRY = _descriptor.Descriptor(
  name='ParamsEntry',
  full_name='deepwater.SetParametersRequest.ParamsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='deepwater.SetParametersRequest.ParamsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='deepwater.SetParametersRequest.ParamsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=303,
  serialized_end=371,
)

_SETPARAMETERSREQUEST = _descriptor.Descriptor(
  name='SetParametersRequest',
  full_name='deepwater.SetParametersRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.SetParametersRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model', full_name='deepwater.SetParametersRequest.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='params', full_name='deepwater.SetParametersRequest.params', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETPARAMETERSREQUEST_PARAMSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1276,
  serialized_end=1506,
)


_SETPARAMETERSRESPONSE_PARAMSENTRY = _descriptor.Descriptor(
  name='ParamsEntry',
  full_name='deepwater.SetParametersResponse.ParamsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='deepwater.SetParametersResponse.ParamsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='deepwater.SetParametersResponse.ParamsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=303,
  serialized_end=371,
)

_SETPARAMETERSRESPONSE = _descriptor.Descriptor(
  name='SetParametersResponse',
  full_name='deepwater.SetParametersResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='deepwater.SetParametersResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='params', full_name='deepwater.SetParametersResponse.params', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETPARAMETERSRESPONSE_PARAMSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1509,
  serialized_end=1699,
)


_EXECUTEREQUEST = _descriptor.Descriptor(
  name='ExecuteRequest',
  full_name='deepwater.ExecuteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='deepwater.ExecuteRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model', full_name='deepwater.ExecuteRequest.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='feeds', full_name='deepwater.ExecuteRequest.feeds', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fetches', full_name='deepwater.ExecuteRequest.fetches', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1702,
  serialized_end=1865,
)


_EXECUTERESPONSE = _descriptor.Descriptor(
  name='ExecuteResponse',
  full_name='deepwater.ExecuteResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='deepwater.ExecuteResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fetches', full_name='deepwater.ExecuteResponse.fetches', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1867,
  serialized_end=1955,
)


_SHAPE_DIM = _descriptor.Descriptor(
  name='Dim',
  full_name='deepwater.Shape.Dim',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='deepwater.Shape.Dim.size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2001,
  serialized_end=2020,
)

_SHAPE = _descriptor.Descriptor(
  name='Shape',
  full_name='deepwater.Shape',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dim', full_name='deepwater.Shape.dim', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SHAPE_DIM, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1957,
  serialized_end=2020,
)


_TENSOR = _descriptor.Descriptor(
  name='Tensor',
  full_name='deepwater.Tensor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shape', full_name='deepwater.Tensor.shape', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='deepwater.Tensor.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='deepwater.Tensor.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='string_value', full_name='deepwater.Tensor.string_value', index=3,
      number=4, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='int32_value', full_name='deepwater.Tensor.int32_value', index=4,
      number=5, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='int64_value', full_name='deepwater.Tensor.int64_value', index=5,
      number=6, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='float_value', full_name='deepwater.Tensor.float_value', index=6,
      number=7, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='double_value', full_name='deepwater.Tensor.double_value', index=7,
      number=8, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='bool_value', full_name='deepwater.Tensor.bool_value', index=8,
      number=9, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2023,
  serialized_end=2260,
)


_PARAMVALUE_LISTVALUE = _descriptor.Descriptor(
  name='ListValue',
  full_name='deepwater.ParamValue.ListValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='s', full_name='deepwater.ParamValue.ListValue.s', index=0,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='i', full_name='deepwater.ParamValue.ListValue.i', index=1,
      number=3, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='c', full_name='deepwater.ParamValue.ListValue.c', index=2,
      number=4, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='f', full_name='deepwater.ParamValue.ListValue.f', index=3,
      number=5, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='b', full_name='deepwater.ParamValue.ListValue.b', index=4,
      number=6, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2391,
  serialized_end=2473,
)

_PARAMVALUE = _descriptor.Descriptor(
  name='ParamValue',
  full_name='deepwater.ParamValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='s', full_name='deepwater.ParamValue.s', index=0,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='i', full_name='deepwater.ParamValue.i', index=1,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='f', full_name='deepwater.ParamValue.f', index=2,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='d', full_name='deepwater.ParamValue.d', index=3,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='b', full_name='deepwater.ParamValue.b', index=4,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='list', full_name='deepwater.ParamValue.list', index=5,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_PARAMVALUE_LISTVALUE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='deepwater.ParamValue.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2263,
  serialized_end=2482,
)

_DELETEMODELREQUEST.fields_by_name['model'].message_type = _BACKENDMODEL
_CREATEMODELREQUEST_PARAMSENTRY.fields_by_name['value'].message_type = _PARAMVALUE
_CREATEMODELREQUEST_PARAMSENTRY.containing_type = _CREATEMODELREQUEST
_CREATEMODELREQUEST.fields_by_name['session'].message_type = _SESSION
_CREATEMODELREQUEST.fields_by_name['params'].message_type = _CREATEMODELREQUEST_PARAMSENTRY
_CREATEMODELRESPONSE.fields_by_name['model'].message_type = _BACKENDMODEL
_CREATEMODELRESPONSE.fields_by_name['status'].message_type = _STATUS
_CREATESESSIONREQUEST_OPTIONSENTRY.fields_by_name['value'].message_type = _PARAMVALUE
_CREATESESSIONREQUEST_OPTIONSENTRY.containing_type = _CREATESESSIONREQUEST
_CREATESESSIONREQUEST.fields_by_name['options'].message_type = _CREATESESSIONREQUEST_OPTIONSENTRY
_CREATESESSIONRESPONSE.fields_by_name['session'].message_type = _SESSION
_CREATESESSIONRESPONSE.fields_by_name['status'].message_type = _STATUS
_DELETESESSIONREQUEST.fields_by_name['session'].message_type = _SESSION
_LOADMODELREQUEST.fields_by_name['session'].message_type = _SESSION
_LOADMODELREQUEST.fields_by_name['model'].message_type = _BACKENDMODEL
_SAVEMODELREQUEST.fields_by_name['session'].message_type = _SESSION
_SAVEMODELREQUEST.fields_by_name['model'].message_type = _BACKENDMODEL
_LOADWEIGHTSREQUEST.fields_by_name['session'].message_type = _SESSION
_LOADWEIGHTSREQUEST.fields_by_name['model'].message_type = _BACKENDMODEL
_SAVEWEIGHTSREQUEST.fields_by_name['session'].message_type = _SESSION
_SAVEWEIGHTSREQUEST.fields_by_name['model'].message_type = _BACKENDMODEL
_SETPARAMETERSREQUEST_PARAMSENTRY.fields_by_name['value'].message_type = _PARAMVALUE
_SETPARAMETERSREQUEST_PARAMSENTRY.containing_type = _SETPARAMETERSREQUEST
_SETPARAMETERSREQUEST.fields_by_name['session'].message_type = _SESSION
_SETPARAMETERSREQUEST.fields_by_name['model'].message_type = _BACKENDMODEL
_SETPARAMETERSREQUEST.fields_by_name['params'].message_type = _SETPARAMETERSREQUEST_PARAMSENTRY
_SETPARAMETERSRESPONSE_PARAMSENTRY.fields_by_name['value'].message_type = _PARAMVALUE
_SETPARAMETERSRESPONSE_PARAMSENTRY.containing_type = _SETPARAMETERSRESPONSE
_SETPARAMETERSRESPONSE.fields_by_name['status'].message_type = _STATUS
_SETPARAMETERSRESPONSE.fields_by_name['params'].message_type = _SETPARAMETERSRESPONSE_PARAMSENTRY
_EXECUTEREQUEST.fields_by_name['session'].message_type = _SESSION
_EXECUTEREQUEST.fields_by_name['model'].message_type = _BACKENDMODEL
_EXECUTEREQUEST.fields_by_name['feeds'].message_type = _TENSOR
_EXECUTEREQUEST.fields_by_name['fetches'].message_type = _TENSOR
_EXECUTERESPONSE.fields_by_name['status'].message_type = _STATUS
_EXECUTERESPONSE.fields_by_name['fetches'].message_type = _TENSOR
_SHAPE_DIM.containing_type = _SHAPE
_SHAPE.fields_by_name['dim'].message_type = _SHAPE_DIM
_TENSOR.fields_by_name['shape'].message_type = _SHAPE
_TENSOR.fields_by_name['type'].enum_type = _DATATYPE
_PARAMVALUE_LISTVALUE.containing_type = _PARAMVALUE
_PARAMVALUE.fields_by_name['list'].message_type = _PARAMVALUE_LISTVALUE
_PARAMVALUE.oneofs_by_name['value'].fields.append(
  _PARAMVALUE.fields_by_name['s'])
_PARAMVALUE.fields_by_name['s'].containing_oneof = _PARAMVALUE.oneofs_by_name['value']
_PARAMVALUE.oneofs_by_name['value'].fields.append(
  _PARAMVALUE.fields_by_name['i'])
_PARAMVALUE.fields_by_name['i'].containing_oneof = _PARAMVALUE.oneofs_by_name['value']
_PARAMVALUE.oneofs_by_name['value'].fields.append(
  _PARAMVALUE.fields_by_name['f'])
_PARAMVALUE.fields_by_name['f'].containing_oneof = _PARAMVALUE.oneofs_by_name['value']
_PARAMVALUE.oneofs_by_name['value'].fields.append(
  _PARAMVALUE.fields_by_name['d'])
_PARAMVALUE.fields_by_name['d'].containing_oneof = _PARAMVALUE.oneofs_by_name['value']
_PARAMVALUE.oneofs_by_name['value'].fields.append(
  _PARAMVALUE.fields_by_name['b'])
_PARAMVALUE.fields_by_name['b'].containing_oneof = _PARAMVALUE.oneofs_by_name['value']
_PARAMVALUE.oneofs_by_name['value'].fields.append(
  _PARAMVALUE.fields_by_name['list'])
_PARAMVALUE.fields_by_name['list'].containing_oneof = _PARAMVALUE.oneofs_by_name['value']
DESCRIPTOR.message_types_by_name['Session'] = _SESSION
DESCRIPTOR.message_types_by_name['BackendModel'] = _BACKENDMODEL
DESCRIPTOR.message_types_by_name['DeleteModelRequest'] = _DELETEMODELREQUEST
DESCRIPTOR.message_types_by_name['CreateModelRequest'] = _CREATEMODELREQUEST
DESCRIPTOR.message_types_by_name['CreateModelResponse'] = _CREATEMODELRESPONSE
DESCRIPTOR.message_types_by_name['CreateSessionRequest'] = _CREATESESSIONREQUEST
DESCRIPTOR.message_types_by_name['CreateSessionResponse'] = _CREATESESSIONRESPONSE
DESCRIPTOR.message_types_by_name['DeleteSessionRequest'] = _DELETESESSIONREQUEST
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['LoadModelRequest'] = _LOADMODELREQUEST
DESCRIPTOR.message_types_by_name['SaveModelRequest'] = _SAVEMODELREQUEST
DESCRIPTOR.message_types_by_name['LoadWeightsRequest'] = _LOADWEIGHTSREQUEST
DESCRIPTOR.message_types_by_name['SaveWeightsRequest'] = _SAVEWEIGHTSREQUEST
DESCRIPTOR.message_types_by_name['SetParametersRequest'] = _SETPARAMETERSREQUEST
DESCRIPTOR.message_types_by_name['SetParametersResponse'] = _SETPARAMETERSRESPONSE
DESCRIPTOR.message_types_by_name['ExecuteRequest'] = _EXECUTEREQUEST
DESCRIPTOR.message_types_by_name['ExecuteResponse'] = _EXECUTERESPONSE
DESCRIPTOR.message_types_by_name['Shape'] = _SHAPE
DESCRIPTOR.message_types_by_name['Tensor'] = _TENSOR
DESCRIPTOR.message_types_by_name['ParamValue'] = _PARAMVALUE
DESCRIPTOR.enum_types_by_name['DataType'] = _DATATYPE

Session = _reflection.GeneratedProtocolMessageType('Session', (_message.Message,), dict(
  DESCRIPTOR = _SESSION,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.Session)
  ))
_sym_db.RegisterMessage(Session)

BackendModel = _reflection.GeneratedProtocolMessageType('BackendModel', (_message.Message,), dict(
  DESCRIPTOR = _BACKENDMODEL,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.BackendModel)
  ))
_sym_db.RegisterMessage(BackendModel)

DeleteModelRequest = _reflection.GeneratedProtocolMessageType('DeleteModelRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEMODELREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.DeleteModelRequest)
  ))
_sym_db.RegisterMessage(DeleteModelRequest)

CreateModelRequest = _reflection.GeneratedProtocolMessageType('CreateModelRequest', (_message.Message,), dict(

  ParamsEntry = _reflection.GeneratedProtocolMessageType('ParamsEntry', (_message.Message,), dict(
    DESCRIPTOR = _CREATEMODELREQUEST_PARAMSENTRY,
    __module__ = 'grpc_service_pb2'
    # @@protoc_insertion_point(class_scope:deepwater.CreateModelRequest.ParamsEntry)
    ))
  ,
  DESCRIPTOR = _CREATEMODELREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.CreateModelRequest)
  ))
_sym_db.RegisterMessage(CreateModelRequest)
_sym_db.RegisterMessage(CreateModelRequest.ParamsEntry)

CreateModelResponse = _reflection.GeneratedProtocolMessageType('CreateModelResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATEMODELRESPONSE,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.CreateModelResponse)
  ))
_sym_db.RegisterMessage(CreateModelResponse)

CreateSessionRequest = _reflection.GeneratedProtocolMessageType('CreateSessionRequest', (_message.Message,), dict(

  OptionsEntry = _reflection.GeneratedProtocolMessageType('OptionsEntry', (_message.Message,), dict(
    DESCRIPTOR = _CREATESESSIONREQUEST_OPTIONSENTRY,
    __module__ = 'grpc_service_pb2'
    # @@protoc_insertion_point(class_scope:deepwater.CreateSessionRequest.OptionsEntry)
    ))
  ,
  DESCRIPTOR = _CREATESESSIONREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.CreateSessionRequest)
  ))
_sym_db.RegisterMessage(CreateSessionRequest)
_sym_db.RegisterMessage(CreateSessionRequest.OptionsEntry)

CreateSessionResponse = _reflection.GeneratedProtocolMessageType('CreateSessionResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATESESSIONRESPONSE,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.CreateSessionResponse)
  ))
_sym_db.RegisterMessage(CreateSessionResponse)

DeleteSessionRequest = _reflection.GeneratedProtocolMessageType('DeleteSessionRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETESESSIONREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.DeleteSessionRequest)
  ))
_sym_db.RegisterMessage(DeleteSessionRequest)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.Status)
  ))
_sym_db.RegisterMessage(Status)

LoadModelRequest = _reflection.GeneratedProtocolMessageType('LoadModelRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOADMODELREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.LoadModelRequest)
  ))
_sym_db.RegisterMessage(LoadModelRequest)

SaveModelRequest = _reflection.GeneratedProtocolMessageType('SaveModelRequest', (_message.Message,), dict(
  DESCRIPTOR = _SAVEMODELREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.SaveModelRequest)
  ))
_sym_db.RegisterMessage(SaveModelRequest)

LoadWeightsRequest = _reflection.GeneratedProtocolMessageType('LoadWeightsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOADWEIGHTSREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.LoadWeightsRequest)
  ))
_sym_db.RegisterMessage(LoadWeightsRequest)

SaveWeightsRequest = _reflection.GeneratedProtocolMessageType('SaveWeightsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SAVEWEIGHTSREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.SaveWeightsRequest)
  ))
_sym_db.RegisterMessage(SaveWeightsRequest)

SetParametersRequest = _reflection.GeneratedProtocolMessageType('SetParametersRequest', (_message.Message,), dict(

  ParamsEntry = _reflection.GeneratedProtocolMessageType('ParamsEntry', (_message.Message,), dict(
    DESCRIPTOR = _SETPARAMETERSREQUEST_PARAMSENTRY,
    __module__ = 'grpc_service_pb2'
    # @@protoc_insertion_point(class_scope:deepwater.SetParametersRequest.ParamsEntry)
    ))
  ,
  DESCRIPTOR = _SETPARAMETERSREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.SetParametersRequest)
  ))
_sym_db.RegisterMessage(SetParametersRequest)
_sym_db.RegisterMessage(SetParametersRequest.ParamsEntry)

SetParametersResponse = _reflection.GeneratedProtocolMessageType('SetParametersResponse', (_message.Message,), dict(

  ParamsEntry = _reflection.GeneratedProtocolMessageType('ParamsEntry', (_message.Message,), dict(
    DESCRIPTOR = _SETPARAMETERSRESPONSE_PARAMSENTRY,
    __module__ = 'grpc_service_pb2'
    # @@protoc_insertion_point(class_scope:deepwater.SetParametersResponse.ParamsEntry)
    ))
  ,
  DESCRIPTOR = _SETPARAMETERSRESPONSE,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.SetParametersResponse)
  ))
_sym_db.RegisterMessage(SetParametersResponse)
_sym_db.RegisterMessage(SetParametersResponse.ParamsEntry)

ExecuteRequest = _reflection.GeneratedProtocolMessageType('ExecuteRequest', (_message.Message,), dict(
  DESCRIPTOR = _EXECUTEREQUEST,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.ExecuteRequest)
  ))
_sym_db.RegisterMessage(ExecuteRequest)

ExecuteResponse = _reflection.GeneratedProtocolMessageType('ExecuteResponse', (_message.Message,), dict(
  DESCRIPTOR = _EXECUTERESPONSE,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.ExecuteResponse)
  ))
_sym_db.RegisterMessage(ExecuteResponse)

Shape = _reflection.GeneratedProtocolMessageType('Shape', (_message.Message,), dict(

  Dim = _reflection.GeneratedProtocolMessageType('Dim', (_message.Message,), dict(
    DESCRIPTOR = _SHAPE_DIM,
    __module__ = 'grpc_service_pb2'
    # @@protoc_insertion_point(class_scope:deepwater.Shape.Dim)
    ))
  ,
  DESCRIPTOR = _SHAPE,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.Shape)
  ))
_sym_db.RegisterMessage(Shape)
_sym_db.RegisterMessage(Shape.Dim)

Tensor = _reflection.GeneratedProtocolMessageType('Tensor', (_message.Message,), dict(
  DESCRIPTOR = _TENSOR,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.Tensor)
  ))
_sym_db.RegisterMessage(Tensor)

ParamValue = _reflection.GeneratedProtocolMessageType('ParamValue', (_message.Message,), dict(

  ListValue = _reflection.GeneratedProtocolMessageType('ListValue', (_message.Message,), dict(
    DESCRIPTOR = _PARAMVALUE_LISTVALUE,
    __module__ = 'grpc_service_pb2'
    # @@protoc_insertion_point(class_scope:deepwater.ParamValue.ListValue)
    ))
  ,
  DESCRIPTOR = _PARAMVALUE,
  __module__ = 'grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:deepwater.ParamValue)
  ))
_sym_db.RegisterMessage(ParamValue)
_sym_db.RegisterMessage(ParamValue.ListValue)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\036ai.h2o.deepwater.backends.grpcB\024DeepWaterGRPCServiceP\001'))
_CREATEMODELREQUEST_PARAMSENTRY.has_options = True
_CREATEMODELREQUEST_PARAMSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CREATESESSIONREQUEST_OPTIONSENTRY.has_options = True
_CREATESESSIONREQUEST_OPTIONSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_SETPARAMETERSREQUEST_PARAMSENTRY.has_options = True
_SETPARAMETERSREQUEST_PARAMSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_SETPARAMETERSRESPONSE_PARAMSENTRY.has_options = True
_SETPARAMETERSRESPONSE_PARAMSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TENSOR.fields_by_name['int32_value'].has_options = True
_TENSOR.fields_by_name['int32_value']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['int64_value'].has_options = True
_TENSOR.fields_by_name['int64_value']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['float_value'].has_options = True
_TENSOR.fields_by_name['float_value']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['double_value'].has_options = True
_TENSOR.fields_by_name['double_value']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['bool_value'].has_options = True
_TENSOR.fields_by_name['bool_value']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_PARAMVALUE_LISTVALUE.fields_by_name['i'].has_options = True
_PARAMVALUE_LISTVALUE.fields_by_name['i']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_PARAMVALUE_LISTVALUE.fields_by_name['c'].has_options = True
_PARAMVALUE_LISTVALUE.fields_by_name['c']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_PARAMVALUE_LISTVALUE.fields_by_name['f'].has_options = True
_PARAMVALUE_LISTVALUE.fields_by_name['f']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_PARAMVALUE_LISTVALUE.fields_by_name['b'].has_options = True
_PARAMVALUE_LISTVALUE.fields_by_name['b']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class DeepWaterPredictBackendStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Execute = channel.unary_unary(
        '/deepwater.DeepWaterPredictBackend/Execute',
        request_serializer=ExecuteRequest.SerializeToString,
        response_deserializer=ExecuteResponse.FromString,
        )


class DeepWaterPredictBackendServicer(object):

  def Execute(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DeepWaterPredictBackendServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Execute': grpc.unary_unary_rpc_method_handler(
          servicer.Execute,
          request_deserializer=ExecuteRequest.FromString,
          response_serializer=ExecuteResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'deepwater.DeepWaterPredictBackend', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaDeepWaterPredictBackendServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def Execute(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaDeepWaterPredictBackendStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def Execute(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Execute.future = None


def beta_create_DeepWaterPredictBackend_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('deepwater.DeepWaterPredictBackend', 'Execute'): ExecuteRequest.FromString,
  }
  response_serializers = {
    ('deepwater.DeepWaterPredictBackend', 'Execute'): ExecuteResponse.SerializeToString,
  }
  method_implementations = {
    ('deepwater.DeepWaterPredictBackend', 'Execute'): face_utilities.unary_unary_inline(servicer.Execute),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_DeepWaterPredictBackend_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('deepwater.DeepWaterPredictBackend', 'Execute'): ExecuteRequest.SerializeToString,
  }
  response_deserializers = {
    ('deepwater.DeepWaterPredictBackend', 'Execute'): ExecuteResponse.FromString,
  }
  cardinalities = {
    'Execute': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'deepwater.DeepWaterPredictBackend', cardinalities, options=stub_options)


class DeepWaterTrainBackendStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateModel = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/CreateModel',
        request_serializer=CreateModelRequest.SerializeToString,
        response_deserializer=CreateModelResponse.FromString,
        )
    self.CreateSession = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/CreateSession',
        request_serializer=CreateSessionRequest.SerializeToString,
        response_deserializer=CreateSessionResponse.FromString,
        )
    self.DeleteSession = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/DeleteSession',
        request_serializer=DeleteSessionRequest.SerializeToString,
        response_deserializer=Status.FromString,
        )
    self.LoadModel = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/LoadModel',
        request_serializer=LoadModelRequest.SerializeToString,
        response_deserializer=Status.FromString,
        )
    self.SaveModel = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/SaveModel',
        request_serializer=SaveModelRequest.SerializeToString,
        response_deserializer=Status.FromString,
        )
    self.LoadWeights = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/LoadWeights',
        request_serializer=LoadWeightsRequest.SerializeToString,
        response_deserializer=Status.FromString,
        )
    self.SaveWeights = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/SaveWeights',
        request_serializer=SaveWeightsRequest.SerializeToString,
        response_deserializer=Status.FromString,
        )
    self.SetParameters = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/SetParameters',
        request_serializer=SetParametersRequest.SerializeToString,
        response_deserializer=SetParametersResponse.FromString,
        )
    self.Execute = channel.unary_unary(
        '/deepwater.DeepWaterTrainBackend/Execute',
        request_serializer=ExecuteRequest.SerializeToString,
        response_deserializer=ExecuteResponse.FromString,
        )


class DeepWaterTrainBackendServicer(object):

  def CreateModel(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateSession(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteSession(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LoadModel(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SaveModel(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LoadWeights(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SaveWeights(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetParameters(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Execute(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DeepWaterTrainBackendServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateModel': grpc.unary_unary_rpc_method_handler(
          servicer.CreateModel,
          request_deserializer=CreateModelRequest.FromString,
          response_serializer=CreateModelResponse.SerializeToString,
      ),
      'CreateSession': grpc.unary_unary_rpc_method_handler(
          servicer.CreateSession,
          request_deserializer=CreateSessionRequest.FromString,
          response_serializer=CreateSessionResponse.SerializeToString,
      ),
      'DeleteSession': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteSession,
          request_deserializer=DeleteSessionRequest.FromString,
          response_serializer=Status.SerializeToString,
      ),
      'LoadModel': grpc.unary_unary_rpc_method_handler(
          servicer.LoadModel,
          request_deserializer=LoadModelRequest.FromString,
          response_serializer=Status.SerializeToString,
      ),
      'SaveModel': grpc.unary_unary_rpc_method_handler(
          servicer.SaveModel,
          request_deserializer=SaveModelRequest.FromString,
          response_serializer=Status.SerializeToString,
      ),
      'LoadWeights': grpc.unary_unary_rpc_method_handler(
          servicer.LoadWeights,
          request_deserializer=LoadWeightsRequest.FromString,
          response_serializer=Status.SerializeToString,
      ),
      'SaveWeights': grpc.unary_unary_rpc_method_handler(
          servicer.SaveWeights,
          request_deserializer=SaveWeightsRequest.FromString,
          response_serializer=Status.SerializeToString,
      ),
      'SetParameters': grpc.unary_unary_rpc_method_handler(
          servicer.SetParameters,
          request_deserializer=SetParametersRequest.FromString,
          response_serializer=SetParametersResponse.SerializeToString,
      ),
      'Execute': grpc.unary_unary_rpc_method_handler(
          servicer.Execute,
          request_deserializer=ExecuteRequest.FromString,
          response_serializer=ExecuteResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'deepwater.DeepWaterTrainBackend', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaDeepWaterTrainBackendServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def CreateModel(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def CreateSession(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DeleteSession(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def LoadModel(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SaveModel(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def LoadWeights(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SaveWeights(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SetParameters(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Execute(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaDeepWaterTrainBackendStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def CreateModel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  CreateModel.future = None
  def CreateSession(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  CreateSession.future = None
  def DeleteSession(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  DeleteSession.future = None
  def LoadModel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  LoadModel.future = None
  def SaveModel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  SaveModel.future = None
  def LoadWeights(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  LoadWeights.future = None
  def SaveWeights(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  SaveWeights.future = None
  def SetParameters(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  SetParameters.future = None
  def Execute(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Execute.future = None


def beta_create_DeepWaterTrainBackend_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('deepwater.DeepWaterTrainBackend', 'CreateModel'): CreateModelRequest.FromString,
    ('deepwater.DeepWaterTrainBackend', 'CreateSession'): CreateSessionRequest.FromString,
    ('deepwater.DeepWaterTrainBackend', 'DeleteSession'): DeleteSessionRequest.FromString,
    ('deepwater.DeepWaterTrainBackend', 'Execute'): ExecuteRequest.FromString,
    ('deepwater.DeepWaterTrainBackend', 'LoadModel'): LoadModelRequest.FromString,
    ('deepwater.DeepWaterTrainBackend', 'LoadWeights'): LoadWeightsRequest.FromString,
    ('deepwater.DeepWaterTrainBackend', 'SaveModel'): SaveModelRequest.FromString,
    ('deepwater.DeepWaterTrainBackend', 'SaveWeights'): SaveWeightsRequest.FromString,
    ('deepwater.DeepWaterTrainBackend', 'SetParameters'): SetParametersRequest.FromString,
  }
  response_serializers = {
    ('deepwater.DeepWaterTrainBackend', 'CreateModel'): CreateModelResponse.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'CreateSession'): CreateSessionResponse.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'DeleteSession'): Status.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'Execute'): ExecuteResponse.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'LoadModel'): Status.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'LoadWeights'): Status.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'SaveModel'): Status.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'SaveWeights'): Status.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'SetParameters'): SetParametersResponse.SerializeToString,
  }
  method_implementations = {
    ('deepwater.DeepWaterTrainBackend', 'CreateModel'): face_utilities.unary_unary_inline(servicer.CreateModel),
    ('deepwater.DeepWaterTrainBackend', 'CreateSession'): face_utilities.unary_unary_inline(servicer.CreateSession),
    ('deepwater.DeepWaterTrainBackend', 'DeleteSession'): face_utilities.unary_unary_inline(servicer.DeleteSession),
    ('deepwater.DeepWaterTrainBackend', 'Execute'): face_utilities.unary_unary_inline(servicer.Execute),
    ('deepwater.DeepWaterTrainBackend', 'LoadModel'): face_utilities.unary_unary_inline(servicer.LoadModel),
    ('deepwater.DeepWaterTrainBackend', 'LoadWeights'): face_utilities.unary_unary_inline(servicer.LoadWeights),
    ('deepwater.DeepWaterTrainBackend', 'SaveModel'): face_utilities.unary_unary_inline(servicer.SaveModel),
    ('deepwater.DeepWaterTrainBackend', 'SaveWeights'): face_utilities.unary_unary_inline(servicer.SaveWeights),
    ('deepwater.DeepWaterTrainBackend', 'SetParameters'): face_utilities.unary_unary_inline(servicer.SetParameters),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_DeepWaterTrainBackend_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('deepwater.DeepWaterTrainBackend', 'CreateModel'): CreateModelRequest.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'CreateSession'): CreateSessionRequest.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'DeleteSession'): DeleteSessionRequest.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'Execute'): ExecuteRequest.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'LoadModel'): LoadModelRequest.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'LoadWeights'): LoadWeightsRequest.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'SaveModel'): SaveModelRequest.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'SaveWeights'): SaveWeightsRequest.SerializeToString,
    ('deepwater.DeepWaterTrainBackend', 'SetParameters'): SetParametersRequest.SerializeToString,
  }
  response_deserializers = {
    ('deepwater.DeepWaterTrainBackend', 'CreateModel'): CreateModelResponse.FromString,
    ('deepwater.DeepWaterTrainBackend', 'CreateSession'): CreateSessionResponse.FromString,
    ('deepwater.DeepWaterTrainBackend', 'DeleteSession'): Status.FromString,
    ('deepwater.DeepWaterTrainBackend', 'Execute'): ExecuteResponse.FromString,
    ('deepwater.DeepWaterTrainBackend', 'LoadModel'): Status.FromString,
    ('deepwater.DeepWaterTrainBackend', 'LoadWeights'): Status.FromString,
    ('deepwater.DeepWaterTrainBackend', 'SaveModel'): Status.FromString,
    ('deepwater.DeepWaterTrainBackend', 'SaveWeights'): Status.FromString,
    ('deepwater.DeepWaterTrainBackend', 'SetParameters'): SetParametersResponse.FromString,
  }
  cardinalities = {
    'CreateModel': cardinality.Cardinality.UNARY_UNARY,
    'CreateSession': cardinality.Cardinality.UNARY_UNARY,
    'DeleteSession': cardinality.Cardinality.UNARY_UNARY,
    'Execute': cardinality.Cardinality.UNARY_UNARY,
    'LoadModel': cardinality.Cardinality.UNARY_UNARY,
    'LoadWeights': cardinality.Cardinality.UNARY_UNARY,
    'SaveModel': cardinality.Cardinality.UNARY_UNARY,
    'SaveWeights': cardinality.Cardinality.UNARY_UNARY,
    'SetParameters': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'deepwater.DeepWaterTrainBackend', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
