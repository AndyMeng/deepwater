// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/config.proto

package org.tensorflow.framework;

public interface GPUOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.GPUOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A value between 0 and 1 that indicates what fraction of the
   * available GPU memory to pre-allocate for each process.  1 means
   * to pre-allocate all of the GPU memory, 0.5 means the process
   * allocates ~50% of the available GPU memory.
   * </pre>
   *
   * <code>optional double per_process_gpu_memory_fraction = 1;</code>
   */
  double getPerProcessGpuMemoryFraction();

  /**
   * <pre>
   * The type of GPU allocation strategy to use.
   * Allowed values:
   * "": The empty string (default) uses a system-chosen default
   *     which may change over time.
   * "BFC": A "Best-fit with coalescing" algorithm, simplified from a
   *        version of dlmalloc.
   * </pre>
   *
   * <code>optional string allocator_type = 2;</code>
   */
  java.lang.String getAllocatorType();
  /**
   * <pre>
   * The type of GPU allocation strategy to use.
   * Allowed values:
   * "": The empty string (default) uses a system-chosen default
   *     which may change over time.
   * "BFC": A "Best-fit with coalescing" algorithm, simplified from a
   *        version of dlmalloc.
   * </pre>
   *
   * <code>optional string allocator_type = 2;</code>
   */
  com.google.protobuf.ByteString
      getAllocatorTypeBytes();

  /**
   * <pre>
   * Delay deletion of up to this many bytes to reduce the number of
   * interactions with gpu driver code.  If 0, the system chooses
   * a reasonable default (several MBs).
   * </pre>
   *
   * <code>optional int64 deferred_deletion_bytes = 3;</code>
   */
  long getDeferredDeletionBytes();

  /**
   * <pre>
   * If true, the allocator does not pre-allocate the entire specified
   * GPU memory region, instead starting small and growing as needed.
   * </pre>
   *
   * <code>optional bool allow_growth = 4;</code>
   */
  boolean getAllowGrowth();
}
