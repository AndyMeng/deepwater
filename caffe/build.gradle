group 'deepwater.backends.caffe'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'

repositories {
    mavenCentral()
}

sourceSets.main.resources {
    srcDirs = ["src/main/resources"]
}

dependencies {
    System.setProperty("os.arch", "x86_64")
    System.setProperty("platform", "linux_x86-64")
    def presets = "${rootDir}/thirdparty/javacpp-presets"
    println("Preset directory set to : ${presets}")

    compile files("${presets}/target/javacpp.jar")
    compile files("${presets}/opencv/target/opencv.jar")
    if (new File("${presets}/opencv/target/opencv-linux-x86_64.jar").exists()) {
        compile files("${presets}/opencv/target/opencv-linux-x86_64.jar")
    }
    else if (new File("${presets}/opencv/target/opencv-macosx-x86_64.jar").exists()) {
        compile files("${presets}/opencv/target/opencv-macosx-x86_64.jar")
    }
    compile files("${presets}/caffe/target/caffe.jar")
    if (new File("${presets}/caffe/target/caffe-linux-x86_64.jar").exists()) {
        compile files("${presets}/caffe/target/caffe-linux-x86_64.jar")
    }
    else if (new File("${presets}/caffe/target/caffe-macosx-x86_64.jar").exists()) {
        compile files("${presets}/caffe/target/caffe-macosx-x86_64.jar")
    }

    compile project (':deepwater-backend-api')
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar {
    baseName = rootProject.name + "." + project.name

    // include also the sources for easy debugging
    from sourceSets.main.allSource

    // copy all the other dependencies as a single JAR
    from configurations.compile.collect {it.isDirectory() ? it: zipTree(it)}
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
