// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_service.proto

package ai.h2o.deepwater.backends.grpc;

/**
 * Protobuf type {@code deepwater.Tensor}
 */
public  final class Tensor extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:deepwater.Tensor)
    TensorOrBuilder {
  // Use Tensor.newBuilder() to construct.
  private Tensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Tensor() {
    type_ = 0;
    name_ = "";
    stringValue_ = java.util.Collections.emptyList();
    int32Value_ = java.util.Collections.emptyList();
    int64Value_ = java.util.Collections.emptyList();
    floatValue_ = java.util.Collections.emptyList();
    doubleValue_ = java.util.Collections.emptyList();
    boolValue_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Tensor(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            ai.h2o.deepwater.backends.grpc.Shape.Builder subBuilder = null;
            if (shape_ != null) {
              subBuilder = shape_.toBuilder();
            }
            shape_ = input.readMessage(ai.h2o.deepwater.backends.grpc.Shape.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(shape_);
              shape_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              stringValue_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
              mutable_bitField0_ |= 0x00000008;
            }
            stringValue_.add(input.readBytes());
            break;
          }
          case 40: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              int32Value_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000010;
            }
            int32Value_.add(input.readInt32());
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              int32Value_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              int32Value_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 48: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              int64Value_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000020;
            }
            int64Value_.add(input.readInt64());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              int64Value_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              int64Value_.add(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 61: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              floatValue_ = new java.util.ArrayList<java.lang.Float>();
              mutable_bitField0_ |= 0x00000040;
            }
            floatValue_.add(input.readFloat());
            break;
          }
          case 58: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
              floatValue_ = new java.util.ArrayList<java.lang.Float>();
              mutable_bitField0_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              floatValue_.add(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 65: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              doubleValue_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000080;
            }
            doubleValue_.add(input.readDouble());
            break;
          }
          case 66: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
              doubleValue_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000080;
            }
            while (input.getBytesUntilLimit() > 0) {
              doubleValue_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 72: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              boolValue_ = new java.util.ArrayList<java.lang.Boolean>();
              mutable_bitField0_ |= 0x00000100;
            }
            boolValue_.add(input.readBool());
            break;
          }
          case 74: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
              boolValue_ = new java.util.ArrayList<java.lang.Boolean>();
              mutable_bitField0_ |= 0x00000100;
            }
            while (input.getBytesUntilLimit() > 0) {
              boolValue_.add(input.readBool());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        stringValue_ = java.util.Collections.unmodifiableList(stringValue_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        int32Value_ = java.util.Collections.unmodifiableList(int32Value_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        int64Value_ = java.util.Collections.unmodifiableList(int64Value_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        floatValue_ = java.util.Collections.unmodifiableList(floatValue_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        doubleValue_ = java.util.Collections.unmodifiableList(doubleValue_);
      }
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        boolValue_ = java.util.Collections.unmodifiableList(boolValue_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.h2o.deepwater.backends.grpc.DeepWaterGRPCService.internal_static_deepwater_Tensor_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.h2o.deepwater.backends.grpc.DeepWaterGRPCService.internal_static_deepwater_Tensor_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.h2o.deepwater.backends.grpc.Tensor.class, ai.h2o.deepwater.backends.grpc.Tensor.Builder.class);
  }

  private int bitField0_;
  public static final int SHAPE_FIELD_NUMBER = 1;
  private ai.h2o.deepwater.backends.grpc.Shape shape_;
  /**
   * <code>optional .deepwater.Shape shape = 1;</code>
   */
  public boolean hasShape() {
    return shape_ != null;
  }
  /**
   * <code>optional .deepwater.Shape shape = 1;</code>
   */
  public ai.h2o.deepwater.backends.grpc.Shape getShape() {
    return shape_ == null ? ai.h2o.deepwater.backends.grpc.Shape.getDefaultInstance() : shape_;
  }
  /**
   * <code>optional .deepwater.Shape shape = 1;</code>
   */
  public ai.h2o.deepwater.backends.grpc.ShapeOrBuilder getShapeOrBuilder() {
    return getShape();
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_;
  /**
   * <code>optional .deepwater.DataType type = 2;</code>
   */
  public int getTypeValue() {
    return type_;
  }
  /**
   * <code>optional .deepwater.DataType type = 2;</code>
   */
  public ai.h2o.deepwater.backends.grpc.DataType getType() {
    ai.h2o.deepwater.backends.grpc.DataType result = ai.h2o.deepwater.backends.grpc.DataType.valueOf(type_);
    return result == null ? ai.h2o.deepwater.backends.grpc.DataType.UNRECOGNIZED : result;
  }

  public static final int NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object name_;
  /**
   * <code>optional string name = 3;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>optional string name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STRING_VALUE_FIELD_NUMBER = 4;
  private java.util.List<com.google.protobuf.ByteString> stringValue_;
  /**
   * <code>repeated bytes string_value = 4;</code>
   */
  public java.util.List<com.google.protobuf.ByteString>
      getStringValueList() {
    return stringValue_;
  }
  /**
   * <code>repeated bytes string_value = 4;</code>
   */
  public int getStringValueCount() {
    return stringValue_.size();
  }
  /**
   * <code>repeated bytes string_value = 4;</code>
   */
  public com.google.protobuf.ByteString getStringValue(int index) {
    return stringValue_.get(index);
  }

  public static final int INT32_VALUE_FIELD_NUMBER = 5;
  private java.util.List<java.lang.Integer> int32Value_;
  /**
   * <code>repeated int32 int32_value = 5 [packed = true];</code>
   */
  public java.util.List<java.lang.Integer>
      getInt32ValueList() {
    return int32Value_;
  }
  /**
   * <code>repeated int32 int32_value = 5 [packed = true];</code>
   */
  public int getInt32ValueCount() {
    return int32Value_.size();
  }
  /**
   * <code>repeated int32 int32_value = 5 [packed = true];</code>
   */
  public int getInt32Value(int index) {
    return int32Value_.get(index);
  }
  private int int32ValueMemoizedSerializedSize = -1;

  public static final int INT64_VALUE_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Long> int64Value_;
  /**
   * <code>repeated int64 int64_value = 6 [packed = true];</code>
   */
  public java.util.List<java.lang.Long>
      getInt64ValueList() {
    return int64Value_;
  }
  /**
   * <code>repeated int64 int64_value = 6 [packed = true];</code>
   */
  public int getInt64ValueCount() {
    return int64Value_.size();
  }
  /**
   * <code>repeated int64 int64_value = 6 [packed = true];</code>
   */
  public long getInt64Value(int index) {
    return int64Value_.get(index);
  }
  private int int64ValueMemoizedSerializedSize = -1;

  public static final int FLOAT_VALUE_FIELD_NUMBER = 7;
  private java.util.List<java.lang.Float> floatValue_;
  /**
   * <code>repeated float float_value = 7 [packed = true];</code>
   */
  public java.util.List<java.lang.Float>
      getFloatValueList() {
    return floatValue_;
  }
  /**
   * <code>repeated float float_value = 7 [packed = true];</code>
   */
  public int getFloatValueCount() {
    return floatValue_.size();
  }
  /**
   * <code>repeated float float_value = 7 [packed = true];</code>
   */
  public float getFloatValue(int index) {
    return floatValue_.get(index);
  }
  private int floatValueMemoizedSerializedSize = -1;

  public static final int DOUBLE_VALUE_FIELD_NUMBER = 8;
  private java.util.List<java.lang.Double> doubleValue_;
  /**
   * <code>repeated double double_value = 8 [packed = true];</code>
   */
  public java.util.List<java.lang.Double>
      getDoubleValueList() {
    return doubleValue_;
  }
  /**
   * <code>repeated double double_value = 8 [packed = true];</code>
   */
  public int getDoubleValueCount() {
    return doubleValue_.size();
  }
  /**
   * <code>repeated double double_value = 8 [packed = true];</code>
   */
  public double getDoubleValue(int index) {
    return doubleValue_.get(index);
  }
  private int doubleValueMemoizedSerializedSize = -1;

  public static final int BOOL_VALUE_FIELD_NUMBER = 9;
  private java.util.List<java.lang.Boolean> boolValue_;
  /**
   * <code>repeated bool bool_value = 9 [packed = true];</code>
   */
  public java.util.List<java.lang.Boolean>
      getBoolValueList() {
    return boolValue_;
  }
  /**
   * <code>repeated bool bool_value = 9 [packed = true];</code>
   */
  public int getBoolValueCount() {
    return boolValue_.size();
  }
  /**
   * <code>repeated bool bool_value = 9 [packed = true];</code>
   */
  public boolean getBoolValue(int index) {
    return boolValue_.get(index);
  }
  private int boolValueMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (shape_ != null) {
      output.writeMessage(1, getShape());
    }
    if (type_ != ai.h2o.deepwater.backends.grpc.DataType.DT_INVALID.getNumber()) {
      output.writeEnum(2, type_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
    }
    for (int i = 0; i < stringValue_.size(); i++) {
      output.writeBytes(4, stringValue_.get(i));
    }
    if (getInt32ValueList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(int32ValueMemoizedSerializedSize);
    }
    for (int i = 0; i < int32Value_.size(); i++) {
      output.writeInt32NoTag(int32Value_.get(i));
    }
    if (getInt64ValueList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(int64ValueMemoizedSerializedSize);
    }
    for (int i = 0; i < int64Value_.size(); i++) {
      output.writeInt64NoTag(int64Value_.get(i));
    }
    if (getFloatValueList().size() > 0) {
      output.writeUInt32NoTag(58);
      output.writeUInt32NoTag(floatValueMemoizedSerializedSize);
    }
    for (int i = 0; i < floatValue_.size(); i++) {
      output.writeFloatNoTag(floatValue_.get(i));
    }
    if (getDoubleValueList().size() > 0) {
      output.writeUInt32NoTag(66);
      output.writeUInt32NoTag(doubleValueMemoizedSerializedSize);
    }
    for (int i = 0; i < doubleValue_.size(); i++) {
      output.writeDoubleNoTag(doubleValue_.get(i));
    }
    if (getBoolValueList().size() > 0) {
      output.writeUInt32NoTag(74);
      output.writeUInt32NoTag(boolValueMemoizedSerializedSize);
    }
    for (int i = 0; i < boolValue_.size(); i++) {
      output.writeBoolNoTag(boolValue_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (shape_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getShape());
    }
    if (type_ != ai.h2o.deepwater.backends.grpc.DataType.DT_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, type_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < stringValue_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(stringValue_.get(i));
      }
      size += dataSize;
      size += 1 * getStringValueList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < int32Value_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(int32Value_.get(i));
      }
      size += dataSize;
      if (!getInt32ValueList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      int32ValueMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < int64Value_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(int64Value_.get(i));
      }
      size += dataSize;
      if (!getInt64ValueList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      int64ValueMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getFloatValueList().size();
      size += dataSize;
      if (!getFloatValueList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      floatValueMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getDoubleValueList().size();
      size += dataSize;
      if (!getDoubleValueList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      doubleValueMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 1 * getBoolValueList().size();
      size += dataSize;
      if (!getBoolValueList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      boolValueMemoizedSerializedSize = dataSize;
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.h2o.deepwater.backends.grpc.Tensor)) {
      return super.equals(obj);
    }
    ai.h2o.deepwater.backends.grpc.Tensor other = (ai.h2o.deepwater.backends.grpc.Tensor) obj;

    boolean result = true;
    result = result && (hasShape() == other.hasShape());
    if (hasShape()) {
      result = result && getShape()
          .equals(other.getShape());
    }
    result = result && type_ == other.type_;
    result = result && getName()
        .equals(other.getName());
    result = result && getStringValueList()
        .equals(other.getStringValueList());
    result = result && getInt32ValueList()
        .equals(other.getInt32ValueList());
    result = result && getInt64ValueList()
        .equals(other.getInt64ValueList());
    result = result && getFloatValueList()
        .equals(other.getFloatValueList());
    result = result && getDoubleValueList()
        .equals(other.getDoubleValueList());
    result = result && getBoolValueList()
        .equals(other.getBoolValueList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasShape()) {
      hash = (37 * hash) + SHAPE_FIELD_NUMBER;
      hash = (53 * hash) + getShape().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getStringValueCount() > 0) {
      hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getStringValueList().hashCode();
    }
    if (getInt32ValueCount() > 0) {
      hash = (37 * hash) + INT32_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getInt32ValueList().hashCode();
    }
    if (getInt64ValueCount() > 0) {
      hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getInt64ValueList().hashCode();
    }
    if (getFloatValueCount() > 0) {
      hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getFloatValueList().hashCode();
    }
    if (getDoubleValueCount() > 0) {
      hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getDoubleValueList().hashCode();
    }
    if (getBoolValueCount() > 0) {
      hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getBoolValueList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.h2o.deepwater.backends.grpc.Tensor parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.h2o.deepwater.backends.grpc.Tensor parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.h2o.deepwater.backends.grpc.Tensor prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code deepwater.Tensor}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:deepwater.Tensor)
      ai.h2o.deepwater.backends.grpc.TensorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.h2o.deepwater.backends.grpc.DeepWaterGRPCService.internal_static_deepwater_Tensor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.h2o.deepwater.backends.grpc.DeepWaterGRPCService.internal_static_deepwater_Tensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.h2o.deepwater.backends.grpc.Tensor.class, ai.h2o.deepwater.backends.grpc.Tensor.Builder.class);
    }

    // Construct using ai.h2o.deepwater.backends.grpc.Tensor.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (shapeBuilder_ == null) {
        shape_ = null;
      } else {
        shape_ = null;
        shapeBuilder_ = null;
      }
      type_ = 0;

      name_ = "";

      stringValue_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      int32Value_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      int64Value_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      floatValue_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000040);
      doubleValue_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      boolValue_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.h2o.deepwater.backends.grpc.DeepWaterGRPCService.internal_static_deepwater_Tensor_descriptor;
    }

    public ai.h2o.deepwater.backends.grpc.Tensor getDefaultInstanceForType() {
      return ai.h2o.deepwater.backends.grpc.Tensor.getDefaultInstance();
    }

    public ai.h2o.deepwater.backends.grpc.Tensor build() {
      ai.h2o.deepwater.backends.grpc.Tensor result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public ai.h2o.deepwater.backends.grpc.Tensor buildPartial() {
      ai.h2o.deepwater.backends.grpc.Tensor result = new ai.h2o.deepwater.backends.grpc.Tensor(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (shapeBuilder_ == null) {
        result.shape_ = shape_;
      } else {
        result.shape_ = shapeBuilder_.build();
      }
      result.type_ = type_;
      result.name_ = name_;
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        stringValue_ = java.util.Collections.unmodifiableList(stringValue_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.stringValue_ = stringValue_;
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        int32Value_ = java.util.Collections.unmodifiableList(int32Value_);
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.int32Value_ = int32Value_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        int64Value_ = java.util.Collections.unmodifiableList(int64Value_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.int64Value_ = int64Value_;
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        floatValue_ = java.util.Collections.unmodifiableList(floatValue_);
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.floatValue_ = floatValue_;
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        doubleValue_ = java.util.Collections.unmodifiableList(doubleValue_);
        bitField0_ = (bitField0_ & ~0x00000080);
      }
      result.doubleValue_ = doubleValue_;
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        boolValue_ = java.util.Collections.unmodifiableList(boolValue_);
        bitField0_ = (bitField0_ & ~0x00000100);
      }
      result.boolValue_ = boolValue_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.h2o.deepwater.backends.grpc.Tensor) {
        return mergeFrom((ai.h2o.deepwater.backends.grpc.Tensor)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.h2o.deepwater.backends.grpc.Tensor other) {
      if (other == ai.h2o.deepwater.backends.grpc.Tensor.getDefaultInstance()) return this;
      if (other.hasShape()) {
        mergeShape(other.getShape());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.stringValue_.isEmpty()) {
        if (stringValue_.isEmpty()) {
          stringValue_ = other.stringValue_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureStringValueIsMutable();
          stringValue_.addAll(other.stringValue_);
        }
        onChanged();
      }
      if (!other.int32Value_.isEmpty()) {
        if (int32Value_.isEmpty()) {
          int32Value_ = other.int32Value_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureInt32ValueIsMutable();
          int32Value_.addAll(other.int32Value_);
        }
        onChanged();
      }
      if (!other.int64Value_.isEmpty()) {
        if (int64Value_.isEmpty()) {
          int64Value_ = other.int64Value_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureInt64ValueIsMutable();
          int64Value_.addAll(other.int64Value_);
        }
        onChanged();
      }
      if (!other.floatValue_.isEmpty()) {
        if (floatValue_.isEmpty()) {
          floatValue_ = other.floatValue_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureFloatValueIsMutable();
          floatValue_.addAll(other.floatValue_);
        }
        onChanged();
      }
      if (!other.doubleValue_.isEmpty()) {
        if (doubleValue_.isEmpty()) {
          doubleValue_ = other.doubleValue_;
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          ensureDoubleValueIsMutable();
          doubleValue_.addAll(other.doubleValue_);
        }
        onChanged();
      }
      if (!other.boolValue_.isEmpty()) {
        if (boolValue_.isEmpty()) {
          boolValue_ = other.boolValue_;
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          ensureBoolValueIsMutable();
          boolValue_.addAll(other.boolValue_);
        }
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ai.h2o.deepwater.backends.grpc.Tensor parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ai.h2o.deepwater.backends.grpc.Tensor) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private ai.h2o.deepwater.backends.grpc.Shape shape_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.h2o.deepwater.backends.grpc.Shape, ai.h2o.deepwater.backends.grpc.Shape.Builder, ai.h2o.deepwater.backends.grpc.ShapeOrBuilder> shapeBuilder_;
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    public boolean hasShape() {
      return shapeBuilder_ != null || shape_ != null;
    }
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    public ai.h2o.deepwater.backends.grpc.Shape getShape() {
      if (shapeBuilder_ == null) {
        return shape_ == null ? ai.h2o.deepwater.backends.grpc.Shape.getDefaultInstance() : shape_;
      } else {
        return shapeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    public Builder setShape(ai.h2o.deepwater.backends.grpc.Shape value) {
      if (shapeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        shape_ = value;
        onChanged();
      } else {
        shapeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    public Builder setShape(
        ai.h2o.deepwater.backends.grpc.Shape.Builder builderForValue) {
      if (shapeBuilder_ == null) {
        shape_ = builderForValue.build();
        onChanged();
      } else {
        shapeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    public Builder mergeShape(ai.h2o.deepwater.backends.grpc.Shape value) {
      if (shapeBuilder_ == null) {
        if (shape_ != null) {
          shape_ =
            ai.h2o.deepwater.backends.grpc.Shape.newBuilder(shape_).mergeFrom(value).buildPartial();
        } else {
          shape_ = value;
        }
        onChanged();
      } else {
        shapeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    public Builder clearShape() {
      if (shapeBuilder_ == null) {
        shape_ = null;
        onChanged();
      } else {
        shape_ = null;
        shapeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    public ai.h2o.deepwater.backends.grpc.Shape.Builder getShapeBuilder() {
      
      onChanged();
      return getShapeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    public ai.h2o.deepwater.backends.grpc.ShapeOrBuilder getShapeOrBuilder() {
      if (shapeBuilder_ != null) {
        return shapeBuilder_.getMessageOrBuilder();
      } else {
        return shape_ == null ?
            ai.h2o.deepwater.backends.grpc.Shape.getDefaultInstance() : shape_;
      }
    }
    /**
     * <code>optional .deepwater.Shape shape = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.h2o.deepwater.backends.grpc.Shape, ai.h2o.deepwater.backends.grpc.Shape.Builder, ai.h2o.deepwater.backends.grpc.ShapeOrBuilder> 
        getShapeFieldBuilder() {
      if (shapeBuilder_ == null) {
        shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.h2o.deepwater.backends.grpc.Shape, ai.h2o.deepwater.backends.grpc.Shape.Builder, ai.h2o.deepwater.backends.grpc.ShapeOrBuilder>(
                getShape(),
                getParentForChildren(),
                isClean());
        shape_ = null;
      }
      return shapeBuilder_;
    }

    private int type_ = 0;
    /**
     * <code>optional .deepwater.DataType type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .deepwater.DataType type = 2;</code>
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .deepwater.DataType type = 2;</code>
     */
    public ai.h2o.deepwater.backends.grpc.DataType getType() {
      ai.h2o.deepwater.backends.grpc.DataType result = ai.h2o.deepwater.backends.grpc.DataType.valueOf(type_);
      return result == null ? ai.h2o.deepwater.backends.grpc.DataType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .deepwater.DataType type = 2;</code>
     */
    public Builder setType(ai.h2o.deepwater.backends.grpc.DataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .deepwater.DataType type = 2;</code>
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.ByteString> stringValue_ = java.util.Collections.emptyList();
    private void ensureStringValueIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        stringValue_ = new java.util.ArrayList<com.google.protobuf.ByteString>(stringValue_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <code>repeated bytes string_value = 4;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getStringValueList() {
      return java.util.Collections.unmodifiableList(stringValue_);
    }
    /**
     * <code>repeated bytes string_value = 4;</code>
     */
    public int getStringValueCount() {
      return stringValue_.size();
    }
    /**
     * <code>repeated bytes string_value = 4;</code>
     */
    public com.google.protobuf.ByteString getStringValue(int index) {
      return stringValue_.get(index);
    }
    /**
     * <code>repeated bytes string_value = 4;</code>
     */
    public Builder setStringValue(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValueIsMutable();
      stringValue_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes string_value = 4;</code>
     */
    public Builder addStringValue(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValueIsMutable();
      stringValue_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes string_value = 4;</code>
     */
    public Builder addAllStringValue(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureStringValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, stringValue_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes string_value = 4;</code>
     */
    public Builder clearStringValue() {
      stringValue_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> int32Value_ = java.util.Collections.emptyList();
    private void ensureInt32ValueIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        int32Value_ = new java.util.ArrayList<java.lang.Integer>(int32Value_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <code>repeated int32 int32_value = 5 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32ValueList() {
      return java.util.Collections.unmodifiableList(int32Value_);
    }
    /**
     * <code>repeated int32 int32_value = 5 [packed = true];</code>
     */
    public int getInt32ValueCount() {
      return int32Value_.size();
    }
    /**
     * <code>repeated int32 int32_value = 5 [packed = true];</code>
     */
    public int getInt32Value(int index) {
      return int32Value_.get(index);
    }
    /**
     * <code>repeated int32 int32_value = 5 [packed = true];</code>
     */
    public Builder setInt32Value(
        int index, int value) {
      ensureInt32ValueIsMutable();
      int32Value_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 int32_value = 5 [packed = true];</code>
     */
    public Builder addInt32Value(int value) {
      ensureInt32ValueIsMutable();
      int32Value_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 int32_value = 5 [packed = true];</code>
     */
    public Builder addAllInt32Value(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureInt32ValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, int32Value_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 int32_value = 5 [packed = true];</code>
     */
    public Builder clearInt32Value() {
      int32Value_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Long> int64Value_ = java.util.Collections.emptyList();
    private void ensureInt64ValueIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        int64Value_ = new java.util.ArrayList<java.lang.Long>(int64Value_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <code>repeated int64 int64_value = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getInt64ValueList() {
      return java.util.Collections.unmodifiableList(int64Value_);
    }
    /**
     * <code>repeated int64 int64_value = 6 [packed = true];</code>
     */
    public int getInt64ValueCount() {
      return int64Value_.size();
    }
    /**
     * <code>repeated int64 int64_value = 6 [packed = true];</code>
     */
    public long getInt64Value(int index) {
      return int64Value_.get(index);
    }
    /**
     * <code>repeated int64 int64_value = 6 [packed = true];</code>
     */
    public Builder setInt64Value(
        int index, long value) {
      ensureInt64ValueIsMutable();
      int64Value_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 int64_value = 6 [packed = true];</code>
     */
    public Builder addInt64Value(long value) {
      ensureInt64ValueIsMutable();
      int64Value_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 int64_value = 6 [packed = true];</code>
     */
    public Builder addAllInt64Value(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureInt64ValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, int64Value_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 int64_value = 6 [packed = true];</code>
     */
    public Builder clearInt64Value() {
      int64Value_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Float> floatValue_ = java.util.Collections.emptyList();
    private void ensureFloatValueIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        floatValue_ = new java.util.ArrayList<java.lang.Float>(floatValue_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <code>repeated float float_value = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
        getFloatValueList() {
      return java.util.Collections.unmodifiableList(floatValue_);
    }
    /**
     * <code>repeated float float_value = 7 [packed = true];</code>
     */
    public int getFloatValueCount() {
      return floatValue_.size();
    }
    /**
     * <code>repeated float float_value = 7 [packed = true];</code>
     */
    public float getFloatValue(int index) {
      return floatValue_.get(index);
    }
    /**
     * <code>repeated float float_value = 7 [packed = true];</code>
     */
    public Builder setFloatValue(
        int index, float value) {
      ensureFloatValueIsMutable();
      floatValue_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float float_value = 7 [packed = true];</code>
     */
    public Builder addFloatValue(float value) {
      ensureFloatValueIsMutable();
      floatValue_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float float_value = 7 [packed = true];</code>
     */
    public Builder addAllFloatValue(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureFloatValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, floatValue_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float float_value = 7 [packed = true];</code>
     */
    public Builder clearFloatValue() {
      floatValue_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> doubleValue_ = java.util.Collections.emptyList();
    private void ensureDoubleValueIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        doubleValue_ = new java.util.ArrayList<java.lang.Double>(doubleValue_);
        bitField0_ |= 0x00000080;
       }
    }
    /**
     * <code>repeated double double_value = 8 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleValueList() {
      return java.util.Collections.unmodifiableList(doubleValue_);
    }
    /**
     * <code>repeated double double_value = 8 [packed = true];</code>
     */
    public int getDoubleValueCount() {
      return doubleValue_.size();
    }
    /**
     * <code>repeated double double_value = 8 [packed = true];</code>
     */
    public double getDoubleValue(int index) {
      return doubleValue_.get(index);
    }
    /**
     * <code>repeated double double_value = 8 [packed = true];</code>
     */
    public Builder setDoubleValue(
        int index, double value) {
      ensureDoubleValueIsMutable();
      doubleValue_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double double_value = 8 [packed = true];</code>
     */
    public Builder addDoubleValue(double value) {
      ensureDoubleValueIsMutable();
      doubleValue_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double double_value = 8 [packed = true];</code>
     */
    public Builder addAllDoubleValue(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureDoubleValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, doubleValue_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double double_value = 8 [packed = true];</code>
     */
    public Builder clearDoubleValue() {
      doubleValue_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Boolean> boolValue_ = java.util.Collections.emptyList();
    private void ensureBoolValueIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        boolValue_ = new java.util.ArrayList<java.lang.Boolean>(boolValue_);
        bitField0_ |= 0x00000100;
       }
    }
    /**
     * <code>repeated bool bool_value = 9 [packed = true];</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolValueList() {
      return java.util.Collections.unmodifiableList(boolValue_);
    }
    /**
     * <code>repeated bool bool_value = 9 [packed = true];</code>
     */
    public int getBoolValueCount() {
      return boolValue_.size();
    }
    /**
     * <code>repeated bool bool_value = 9 [packed = true];</code>
     */
    public boolean getBoolValue(int index) {
      return boolValue_.get(index);
    }
    /**
     * <code>repeated bool bool_value = 9 [packed = true];</code>
     */
    public Builder setBoolValue(
        int index, boolean value) {
      ensureBoolValueIsMutable();
      boolValue_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bool bool_value = 9 [packed = true];</code>
     */
    public Builder addBoolValue(boolean value) {
      ensureBoolValueIsMutable();
      boolValue_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bool bool_value = 9 [packed = true];</code>
     */
    public Builder addAllBoolValue(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureBoolValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, boolValue_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bool bool_value = 9 [packed = true];</code>
     */
    public Builder clearBoolValue() {
      boolValue_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:deepwater.Tensor)
  }

  // @@protoc_insertion_point(class_scope:deepwater.Tensor)
  private static final ai.h2o.deepwater.backends.grpc.Tensor DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.h2o.deepwater.backends.grpc.Tensor();
  }

  public static ai.h2o.deepwater.backends.grpc.Tensor getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Tensor>
      PARSER = new com.google.protobuf.AbstractParser<Tensor>() {
    public Tensor parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tensor(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Tensor> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Tensor> getParserForType() {
    return PARSER;
  }

  public ai.h2o.deepwater.backends.grpc.Tensor getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

